import React, { useState, useEffect } from "react";
import { Link } from "react-router-dom";
import "../../styles/Blog/BlogPost.css";

function Compare() {
  const [isLoaded, setIsLoaded] = useState(false);

  useEffect(() => {
    setIsLoaded(true);
  }, []);

  const blogData = {
    title: "Java vs JavaScript - So S√°nh Chi Ti·∫øt",
    subtitle: "Ph√¢n t√≠ch s·ª± kh√°c bi·ªát gi·ªØa Java v√† JavaScript trong l·∫≠p tr√¨nh hi·ªán ƒë·∫°i",
    category: "Programming Comparison",
    author: "Tr·∫ßn Kh√°nh Linh", 
    publishDate: "2024-10-23",
    tags: ["Java", "JavaScript", "Comparison", "Programming", "Languages", "Development"],
    difficulty: "Intermediate"
  };

  return (
    <div className={`blog-post-page ${isLoaded ? 'loaded' : ''}`}>
      {/* Hero Section */}
      <div className="blog-hero">
        <div className="blog-hero-content">
          <div className="blog-breadcrumb">
            <Link to="/blog" className="breadcrumb-link">Blog</Link>
            <span className="breadcrumb-separator">‚Ä¢</span>
            <Link to="/blog?category=comparison" className="breadcrumb-link">Comparison</Link>
            <span className="breadcrumb-separator">‚Ä¢</span>
            <span className="breadcrumb-current">Java vs JavaScript</span>
          </div>
          
          <div className="blog-category-badge">
            <span className="category-icon">‚öñÔ∏è</span>
            {blogData.category}
          </div>
          
          <h1 className="blog-title">{blogData.title}</h1>
          <p className="blog-subtitle">{blogData.subtitle}</p>
          
          <div className="blog-meta">
            <div className="meta-item">
              <span className="meta-icon">üë§</span>
              <span>{blogData.author}</span>
            </div>
            <div className="meta-item">
              <span className="meta-icon">üìÖ</span>
              <span>{new Date(blogData.publishDate).toLocaleDateString('vi-VN')}</span>
            </div>
            <div className="meta-item">
              <span className="meta-icon">‚è±Ô∏è</span>
              <span>5 ph√∫t ƒë·ªçc</span>
            </div>
            <div className="meta-item difficulty">
              <span className="meta-icon">üéØ</span>
              <span>{blogData.difficulty}</span>
            </div>
          </div>
        </div>
        
      </div>

      {/* Main Content */}
      <div className="blog-container">
        <div className="blog-sidebar">
          <div className="sidebar-section">
            <h3 className="sidebar-title">üìã M·ª•c l·ª•c</h3>
            <nav className="table-of-contents">
              <a href="#intro" className="toc-link">1. Gi·ªõi thi·ªáu v·ªÅ JavaScript</a>
              <a href="#variables" className="toc-link">2. Variables & Data Types</a>
              <a href="#functions" className="toc-link">3. Functions</a>
              <a href="#dom" className="toc-link">4. DOM Manipulation</a>
              <a href="#es6" className="toc-link">5. ES6+ Features</a>
              <a href="#summary" className="toc-link">6. T·ªïng k·∫øt</a>
            </nav>
          </div>
          
          <div className="sidebar-section">
            <h3 className="sidebar-title">üè∑Ô∏è Tags</h3>
            <div className="blog-tags">
              {blogData.tags.map((tag, index) => (
                <span key={index} className="blog-tag">#{tag}</span>
              ))}
            </div>
          </div>

          <div className="sidebar-section">
            <h3 className="sidebar-title">üìö B√†i vi·∫øt li√™n quan</h3>
            <div className="related-posts">
              <Link to="/blog/js2" className="related-post">
                <span className="related-icon">üü®</span>
                <span>JavaScript Advanced</span>
              </Link>
              <Link to="/blog/js3" className="related-post">
                <span className="related-icon">üü®</span>
                <span>JavaScript Frameworks</span>
              </Link>
            </div>
          </div>
        </div>

        <article className="blog-content">
                            <section id="intro" className="content-section">
            <h2 className="section-title">
              <span className="section-number">01</span>
              <span className="section-text">Gi·ªõi thi·ªáu v·ªÅ JavaScript</span>
            </h2>
            <div className="section-content">
              <p className="highlight-text">
                JavaScript l√† ng√¥n ng·ªØ l·∫≠p tr√¨nh ƒë·ªông, ƒë∆∞·ª£c s·ª≠ d·ª•ng ch·ªß y·∫øu ƒë·ªÉ t·∫°o ra
                c√°c trang web t∆∞∆°ng t√°c. T·ª´ m·ªôt ng√¥n ng·ªØ client-side ƒë∆°n gi·∫£n, JavaScript
                ƒë√£ ph√°t tri·ªÉn th√†nh m·ªôt trong nh·ªØng ng√¥n ng·ªØ ph·ªï bi·∫øn nh·∫•t th·∫ø gi·ªõi.
              </p>
              
              <div className="info-box">
                <h4>üåü T·∫°i sao n√™n h·ªçc JavaScript?</h4>
                <ul>
                  <li>Ng√¥n ng·ªØ duy nh·∫•t ch·∫°y ƒë∆∞·ª£c tr√™n browser</li>
                  <li>Full-stack development v·ªõi Node.js</li>
                  <li>H·ªá sinh th√°i th∆∞ vi·ªán v√† framework phong ph√∫</li>
                  <li>C·ªông ƒë·ªìng ph√°t tri·ªÉn l·ªõn m·∫°nh</li>
                </ul>
              </div>
            </div>
          </section>

          <section id="variables" className="content-section">
            <h2 className="section-title">
              <span className="section-number">02</span>
              <span className="section-text">Variables v√† Data Types</span>
            </h2>
            <div className="section-content">
              <div className="data-types-grid">
                <div className="data-type-card">
                  <div className="type-icon">üìù</div>
                  <h4>let/const</h4>
                  <p>Block-scoped variables</p>
                  <code>let name = "Linh";</code>
                </div>
                <div className="data-type-card">
                  <div className="type-icon">üî¢</div>
                  <h4>Number</h4>
                  <p>S·ªë nguy√™n v√† th·ª±c</p>
                  <code>let age = 21;</code>
                </div>
                <div className="data-type-card">
                  <div className="type-icon">‚úÖ</div>
                  <h4>Boolean</h4>
                  <p>True/False</p>
                  <code>let isActive = true;</code>
                </div>
                <div className="data-type-card">
                  <div className="type-icon">üìã</div>
                  <h4>Array</h4>
                  <p>M·∫£ng d·ªØ li·ªáu</p>
                  <code>let items = [1, 2, 3];</code>
                </div>
              </div>

              <div className="code-example">
                <div className="code-header">
                  <span className="code-title">Variable Declaration</span>
                  <span className="code-language">JavaScript</span>
                </div>
                <pre className="code-block">{`// ES6+ Variable Declaration
const PI = 3.14159; // Constant
let userName = "Linh"; // Mutable
let age = 21;
let isStudent = true;

// Arrays and Objects
let hobbies = ["coding", "reading", "music"];
let person = {
  name: "Linh",
  age: 21,
  skills: ["JavaScript", "React", "Node.js"]
};

console.log(\`Hello, \${userName}!\`); // Template literal`}</pre>
              </div>
            </div>
          </section>

          <section id="functions" className="content-section">
            <h2 className="section-title">
              <span className="section-number">03</span>
              <span className="section-text">Functions</span>
            </h2>
            <div className="section-content">
              <p>
                Functions l√† kh·ªëi code c√≥ th·ªÉ t√°i s·ª≠ d·ª•ng. JavaScript h·ªó tr·ª£ nhi·ªÅu c√°ch
                khai b√°o function kh√°c nhau.
              </p>
              
              <div className="code-example">
                <div className="code-header">
                  <span className="code-title">Function Examples</span>
                  <span className="code-language">JavaScript</span>
                </div>
                <pre className="code-block">{`// Function Declaration
function greet(name) {
  return \`Hello, \${name}!\`;
}

// Arrow Function (ES6+)
const add = (a, b) => a + b;

// Function Expression
const multiply = function(x, y) {
  return x * y;
};

// Higher-order function
const numbers = [1, 2, 3, 4, 5];
const doubled = numbers.map(num => num * 2);
console.log(doubled); // [2, 4, 6, 8, 10]`}</pre>
              </div>
            </div>
          </section>

          <section id="dom" className="content-section">
            <h2 className="section-title">
              <span className="section-number">04</span>
              <span className="section-text">DOM Manipulation</span>
            </h2>
            <div className="section-content">
              <p>
                DOM (Document Object Model) cho ph√©p JavaScript t∆∞∆°ng t√°c v·ªõi HTML elements
                ƒë·ªÉ t·∫°o ra c√°c trang web ƒë·ªông v√† t∆∞∆°ng t√°c.
              </p>
              
              <div className="code-example">
                <div className="code-header">
                  <span className="code-title">DOM Examples</span>
                  <span className="code-language">JavaScript</span>
                </div>
                <pre className="code-block">{`// Select elements
const title = document.getElementById('title');
const buttons = document.querySelectorAll('.btn');

// Modify content
title.textContent = 'Welcome to JavaScript!';
title.style.color = '#ffd700';

// Add event listeners
button.addEventListener('click', function() {
  alert('Button clicked!');
});

// Create new elements
const newDiv = document.createElement('div');
newDiv.className = 'highlight';
newDiv.innerHTML = '<p>Dynamic content!</p>';
document.body.appendChild(newDiv);`}</pre>
              </div>

              <div className="tip-box">
                <h4>üí° Modern DOM APIs</h4>
                <p>S·ª≠ d·ª•ng <code>querySelector()</code> v√† <code>addEventListener()</code> thay cho c√°c method c≈©!</p>
              </div>
            </div>
          </section>

          <section id="summary" className="content-section">
            <h2 className="section-title">
              <span className="section-number">05</span>
              <span className="section-text">T·ªïng k·∫øt</span>
            </h2>
            <div className="section-content">
              <div className="summary-box">
                <h4>üìö Nh·ªØng g√¨ b·∫°n ƒë√£ h·ªçc:</h4>
                <ul className="summary-list">
                  <li>T·∫°i sao JavaScript quan tr·ªçng trong web development</li>
                  <li>Variables v√† data types trong ES6+</li>
                  <li>C√°c c√°ch khai b√°o v√† s·ª≠ d·ª•ng functions</li>
                  <li>DOM manipulation ƒë·ªÉ t·∫°o trang web t∆∞∆°ng t√°c</li>
                </ul>
              </div>
              
              <div className="next-steps">
                <h4>üöÄ B∆∞·ªõc ti·∫øp theo:</h4>
                <p>
                  H√£y th·ª±c h√†nh v·ªõi c√°c concepts v·ª´a h·ªçc v√† kh√°m ph√° c√°c ch·ªß ƒë·ªÅ n√¢ng cao nh∆∞
                  Promises, Async/Await, v√† c√°c JavaScript frameworks nh∆∞ React, Vue.js!
                </p>
              </div>
            </div>
          </section>

          <div className="blog-navigation">
            <Link to="/blog" className="nav-button back-button">
              <span className="nav-icon">‚Üê</span>
              <span>Quay l·∫°i Blog</span>
            </Link>
            <Link to="/blog/js2" className="nav-button next-button">
              <span>JavaScript Advanced</span>
              <span className="nav-icon">‚Üí</span>
            </Link>
          </div>

          <section id="structure" className="content-section">
            <h2 className="section-title">
              <span className="section-number">02</span>
              <span className="section-text">C·∫•u tr√∫c c∆° b·∫£n c·ªßa ch∆∞∆°ng tr√¨nh Java</span>
            </h2>
            <div className="section-content">
              <div className="code-example">
                <div className="code-header">
                  <span className="code-title">Main.java</span>
                  <span className="code-language">Java</span>
                </div>
                <pre className="code-block">{`public class Main {
    public static void main(String[] args) {
        System.out.println("Hello, Java!");
    }
}`}</pre>
              </div>
              
              <div className="explanation">
                <p>
                  M·ªói ch∆∞∆°ng tr√¨nh Java ƒë·ªÅu c√≥ √≠t nh·∫•t m·ªôt <strong>class</strong>, v√† ph∆∞∆°ng th·ª©c
                  <code> main() </code> l√† ƒëi·ªÉm b·∫Øt ƒë·∫ßu th·ª±c thi c·ªßa ch∆∞∆°ng tr√¨nh.
                </p>
              </div>
            </div>
          </section>

          <section id="variables" className="content-section">
            <h2 className="section-title">
              <span className="section-number">03</span>
              <span className="section-text">Bi·∫øn v√† ki·ªÉu d·ªØ li·ªáu</span>
            </h2>
            <div className="section-content">
              <div className="data-types-grid">
                <div className="data-type-card">
                  <div className="type-icon">üî¢</div>
                  <h4>int</h4>
                  <p>S·ªë nguy√™n</p>
                  <code>int age = 20;</code>
                </div>
                <div className="data-type-card">
                  <div className="type-icon">üìä</div>
                  <h4>double</h4>
                  <p>S·ªë th·ª±c</p>
                  <code>double score = 9.5;</code>
                </div>
                <div className="data-type-card">
                  <div className="type-icon">‚úÖ</div>
                  <h4>boolean</h4>
                  <p>ƒê√∫ng/Sai</p>
                  <code>boolean isStudent = true;</code>
                </div>
                <div className="data-type-card">
                  <div className="type-icon">üìù</div>
                  <h4>String</h4>
                  <p>Chu·ªói k√Ω t·ª±</p>
                  <code>String name = "Linh";</code>
                </div>
              </div>

              <div className="code-example">
                <div className="code-header">
                  <span className="code-title">V√≠ d·ª• khai b√°o bi·∫øn</span>
                  <span className="code-language">Java</span>
                </div>
                <pre className="code-block">{`// Khai b√°o v√† kh·ªüi t·∫°o bi·∫øn
int age = 20;
double score = 9.5;
boolean isStudent = true;
String name = "Linh";

// S·ª≠ d·ª•ng bi·∫øn
System.out.println("T√™n: " + name);
System.out.println("Tu·ªïi: " + age);`}</pre>
              </div>
            </div>
          </section>

          <section id="summary" className="content-section">
            <h2 className="section-title">
              <span className="section-number">04</span>
              <span className="section-text">T·ªïng k·∫øt</span>
            </h2>
            <div className="section-content">
              <div className="summary-box">
                <h4>üìö Nh·ªØng g√¨ b·∫°n ƒë√£ h·ªçc:</h4>
                <ul className="summary-list">
                  <li>C·∫•u tr√∫c c∆° b·∫£n c·ªßa ch∆∞∆°ng tr√¨nh Java</li>
                  <li>C√°c ki·ªÉu d·ªØ li·ªáu primitive quan tr·ªçng</li>
                  <li>C√°ch khai b√°o v√† s·ª≠ d·ª•ng bi·∫øn</li>
                  <li>T·∫ßm quan tr·ªçng c·ªßa Java trong l·∫≠p tr√¨nh</li>
                </ul>
              </div>
              
              <div className="next-steps">
                <h4>üöÄ B∆∞·ªõc ti·∫øp theo:</h4>
                <p>
                  B√¢y gi·ªù b·∫°n ƒë√£ n·∫Øm v·ªØng c√°c kh√°i ni·ªám c∆° b·∫£n c·ªßa Java. 
                  H√£y luy·ªán t·∫≠p th·∫≠t nhi·ªÅu v√† kh√°m ph√° c√°c ch·ªß ƒë·ªÅ n√¢ng cao nh∆∞ OOP, 
                  Exception Handling, v√† Collections Framework!
                </p>
              </div>
            </div>
          </section>

          <div className="blog-navigation">
            <Link to="/blog" className="nav-button back-button">
              <span className="nav-icon">‚Üê</span>
              <span>Quay l·∫°i Blog</span>
            </Link>
            <Link to="/blog/java2" className="nav-button next-button">
              <span>Java OOP Fundamentals</span>
              <span className="nav-icon">‚Üí</span>
            </Link>
          </div>
        </article>
      </div>
    </div>
  );
}

export default Compare;


