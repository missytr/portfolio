import React, { useState, useEffect } from "react";
import { Link } from "react-router-dom";
import "../../styles/Blog/BlogPost.css";

function Java2() {
  const [isLoaded, setIsLoaded] = useState(false);

  useEffect(() => {
    setIsLoaded(true);
  }, []);

  const blogData = {
    title: "Java OOP - L·∫≠p Tr√¨nh H∆∞·ªõng ƒê·ªëi T∆∞·ª£ng",
    subtitle: "Kh√°m ph√° l·∫≠p tr√¨nh h∆∞·ªõng ƒë·ªëi t∆∞·ª£ng: Class, Object, Inheritance, Polymorphism v√† c√°c t√≠nh ch·∫•t OOP",
    category: "Java Programming",
    author: "Tr·∫ßn Kh√°nh Linh",
    publishDate: "2024-10-16",
    tags: ["Java", "OOP", "Class", "Object", "Inheritance", "Polymorphism"],
    difficulty: "Intermediate"
  };

  return (
    <div className={`blog-post-page ${isLoaded ? 'loaded' : ''}`}>
      {/* Hero Section */}
      <div className="blog-hero">
        <div className="blog-hero-content">
          <div className="blog-breadcrumb">
            <Link to="/blog" className="breadcrumb-link">Blog</Link>
            <span className="breadcrumb-separator">‚Ä¢</span>
            <Link to="/blog?category=java" className="breadcrumb-link">Java</Link>
            <span className="breadcrumb-separator">‚Ä¢</span>
            <span className="breadcrumb-current">Java OOP</span>
          </div>
          
          <div className="blog-category-badge">
            <span className="category-icon">‚òï</span>
            {blogData.category}
          </div>
          
          <h1 className="blog-title">{blogData.title}</h1>
          <p className="blog-subtitle">{blogData.subtitle}</p>
          
          <div className="blog-meta">
            <div className="meta-item">
              <span className="meta-icon">üë§</span>
              <span>{blogData.author}</span>
            </div>
            <div className="meta-item">
              <span className="meta-icon">üìÖ</span>
              <span>{new Date(blogData.publishDate).toLocaleDateString('vi-VN')}</span>
            </div>
            <div className="meta-item">
              <span className="meta-icon">‚è±Ô∏è</span>
              <span>10 ph√∫t ƒë·ªçc</span>
            </div>
            <div className="meta-item difficulty">
              <span className="meta-icon">üéØ</span>
              <span>{blogData.difficulty}</span>
            </div>
          </div>
        </div>
        
      </div>

      {/* Main Content */}
      <div className="blog-container">
        <div className="blog-sidebar">
          <div className="sidebar-section">
            <h3 className="sidebar-title">üìã M·ª•c l·ª•c</h3>
            <nav className="table-of-contents">
              <a href="#intro" className="toc-link">1. Gi·ªõi thi·ªáu v·ªÅ OOP</a>
              <a href="#class-object" className="toc-link">2. Class v√† Object</a>
              <a href="#inheritance" className="toc-link">3. T√≠nh k·∫ø th·ª´a</a>
              <a href="#polymorphism" className="toc-link">4. T√≠nh ƒëa h√¨nh</a>
              <a href="#encapsulation" className="toc-link">5. T√≠nh ƒë√≥ng g√≥i</a>
              <a href="#summary" className="toc-link">6. T·ªïng k·∫øt</a>
            </nav>
          </div>
          
          <div className="sidebar-section">
            <h3 className="sidebar-title">üè∑Ô∏è Tags</h3>
            <div className="blog-tags">
              {blogData.tags.map((tag, index) => (
                <span key={index} className="blog-tag">#{tag}</span>
              ))}
            </div>
          </div>

          <div className="sidebar-section">
            <h3 className="sidebar-title">üìö B√†i vi·∫øt li√™n quan</h3>
            <div className="related-posts">
              <Link to="/blog/java1" className="related-post">
                <span className="related-icon">‚òï</span>
                <span>Java Basics</span>
              </Link>
              <Link to="/blog/java3" className="related-post">
                <span className="related-icon">‚òï</span>
                <span>Java Collections Framework</span>
              </Link>
            </div>
          </div>
        </div>

        <article className="blog-content">
                  <section id="intro" className="content-section">
            <h2 className="section-title">
              <span className="section-number">01</span>
              <span className="section-text">Gi·ªõi thi·ªáu v·ªÅ OOP trong Java</span>
            </h2>
            <div className="section-content">
              <p className="highlight-text">
                OOP (Object-Oriented Programming) l√† m√¥ h√¨nh l·∫≠p tr√¨nh d·ª±a tr√™n kh√°i ni·ªám
                "ƒë·ªëi t∆∞·ª£ng" ‚Äî n∆°i d·ªØ li·ªáu v√† h√†nh vi ƒë∆∞·ª£c ƒë√≥ng g√≥i chung l·∫°i.
                Java l√† m·ªôt trong nh·ªØng ng√¥n ng·ªØ h·ªó tr·ª£ OOP m·∫°nh m·∫Ω nh·∫•t.
              </p>
              
              <div className="info-box">
                <h4>üèóÔ∏è 4 T√≠nh ch·∫•t ch√≠nh c·ªßa OOP</h4>
                <ul>
                  <li><strong>Encapsulation:</strong> ƒê√≥ng g√≥i d·ªØ li·ªáu v√† ph∆∞∆°ng th·ª©c</li>
                  <li><strong>Inheritance:</strong> K·∫ø th·ª´a thu·ªôc t√≠nh t·ª´ l·ªõp cha</li>
                  <li><strong>Polymorphism:</strong> ƒêa h√¨nh - c√πng h√†nh vi, kh√°c c√°ch th·ª±c hi·ªán</li>
                  <li><strong>Abstraction:</strong> Tr·ª´u t∆∞·ª£ng h√≥a c√°c kh√°i ni·ªám ph·ª©c t·∫°p</li>
                </ul>
              </div>
            </div>
          </section>

          <section id="class-object" className="content-section">
            <h2 className="section-title">
              <span className="section-number">02</span>
              <span className="section-text">Class v√† Object</span>
            </h2>
            <div className="section-content">
              <p>
                <strong>Class</strong> l√† b·∫£n thi·∫øt k·∫ø (blueprint) cho c√°c ƒë·ªëi t∆∞·ª£ng,
                c√≤n <strong>Object</strong> l√† th·ªÉ hi·ªán c·ª• th·ªÉ c·ªßa l·ªõp.
              </p>
              
              <div className="code-example">
                <div className="code-header">
                  <span className="code-title">Student.java</span>
                  <span className="code-language">Java</span>
                </div>
                <pre className="code-block">{`public class Student {
    String name;
    int age;

    void study() {
        System.out.println(name + " ƒëang h·ªçc Java");
    }
}

public class Main {
    public static void main(String[] args) {
        Student s1 = new Student();
        s1.name = "Linh";
        s1.age = 21;
        s1.study();
    }
}`}</pre>
              </div>
            </div>
          </section>

          <section id="inheritance" className="content-section">
            <h2 className="section-title">
              <span className="section-number">03</span>
              <span className="section-text">T√≠nh k·∫ø th·ª´a (Inheritance)</span>
            </h2>
            <div className="section-content">
              <p>
                K·∫ø th·ª´a cho ph√©p m·ªôt l·ªõp <strong>con</strong> s·ª≠ d·ª•ng l·∫°i thu·ªôc t√≠nh v√† ph∆∞∆°ng th·ª©c c·ªßa l·ªõp <strong>cha</strong>,
                gi√∫p gi·∫£m l·∫∑p code v√† tƒÉng kh·∫£ nƒÉng t√°i s·ª≠ d·ª•ng.
              </p>
              
              <div className="code-example">
                <div className="code-header">
                  <span className="code-title">Animal Inheritance</span>
                  <span className="code-language">Java</span>
                </div>
                <pre className="code-block">{`class Animal {
    void eat() {
        System.out.println("ƒêang ƒÉn...");
    }
}

class Dog extends Animal {
    void bark() {
        System.out.println("G√¢u g√¢u!");
    }
}

public class Main {
    public static void main(String[] args) {
        Dog dog = new Dog();
        dog.eat(); // K·∫ø th·ª´a t·ª´ Animal
        dog.bark();
    }
}`}</pre>
              </div>
            </div>
          </section>

          <section id="polymorphism" className="content-section">
            <h2 className="section-title">
              <span className="section-number">04</span>
              <span className="section-text">T√≠nh ƒëa h√¨nh (Polymorphism)</span>
            </h2>
            <div className="section-content">
              <p>
                ƒêa h√¨nh cho ph√©p m·ªôt h√†nh ƒë·ªông c√≥ th·ªÉ ƒë∆∞·ª£c th·ª±c hi·ªán theo nhi·ªÅu c√°ch kh√°c nhau.
                Trong Java, n√≥ ƒë∆∞·ª£c th·ªÉ hi·ªán qua <strong>ghi ƒë√® ph∆∞∆°ng th·ª©c</strong> (method overriding).
              </p>
              
              <div className="code-example">
                <div className="code-header">
                  <span className="code-title">Polymorphism Example</span>
                  <span className="code-language">Java</span>
                </div>
                <pre className="code-block">{`class Animal {
    void sound() {
        System.out.println("√Çm thanh chung");
    }
}

class Cat extends Animal {
    @Override
    void sound() {
        System.out.println("Meo meo");
    }
}

public class Main {
    public static void main(String[] args) {
        Animal myCat = new Cat();
        myCat.sound(); // G·ªçi ph∆∞∆°ng th·ª©c ƒë∆∞·ª£c ghi ƒë√®
    }
}`}</pre>
              </div>
            </div>
          </section>

          <section id="encapsulation" className="content-section">
            <h2 className="section-title">
              <span className="section-number">05</span>
              <span className="section-text">T√≠nh ƒë√≥ng g√≥i (Encapsulation)</span>
            </h2>
            <div className="section-content">
              <p>
                ƒê√≥ng g√≥i gi√∫p b·∫£o v·ªá d·ªØ li·ªáu b√™n trong ƒë·ªëi t∆∞·ª£ng b·∫±ng c√°ch s·ª≠ d·ª•ng c√°c
                <strong>ph·∫°m vi truy c·∫≠p</strong> (private, public, protected) v√† ph∆∞∆°ng th·ª©c getter/setter.
              </p>
              
              <div className="code-example">
                <div className="code-header">
                  <span className="code-title">Account.java</span>
                  <span className="code-language">Java</span>
                </div>
                <pre className="code-block">{`public class Account {
    private double balance;

    public void setBalance(double amount) {
        if (amount > 0) balance = amount;
    }

    public double getBalance() {
        return balance;
    }
}`}</pre>
              </div>

              <div className="tip-box">
                <h4>üí° T·∫°i sao c·∫ßn Encapsulation?</h4>
                <p>Gi√∫p ki·ªÉm so√°t quy·ªÅn truy c·∫≠p d·ªØ li·ªáu v√† ƒë·∫£m b·∫£o t√≠nh to√†n v·∫πn c·ªßa object!</p>
              </div>
            </div>
          </section>

          <section id="summary" className="content-section">
            <h2 className="section-title">
              <span className="section-number">06</span>
              <span className="section-text">T·ªïng k·∫øt</span>
            </h2>
            <div className="section-content">
              <div className="summary-box">
                <h4>üìö Nh·ªØng g√¨ b·∫°n ƒë√£ h·ªçc:</h4>
                <ul className="summary-list">
                  <li>4 t√≠nh ch·∫•t c∆° b·∫£n c·ªßa OOP trong Java</li>
                  <li>C√°ch t·∫°o Class v√† Object</li>
                  <li>K·∫ø th·ª´a (Inheritance) v√† c√°ch s·ª≠ d·ª•ng</li>
                  <li>ƒêa h√¨nh (Polymorphism) qua method overriding</li>
                  <li>ƒê√≥ng g√≥i (Encapsulation) ƒë·ªÉ b·∫£o v·ªá d·ªØ li·ªáu</li>
                </ul>
              </div>
              
              <div className="next-steps">
                <h4>üöÄ B∆∞·ªõc ti·∫øp theo:</h4>
                <p>
                  B√¢y gi·ªù b·∫°n ƒë√£ hi·ªÉu c√°c kh√°i ni·ªám OOP c∆° b·∫£n. H√£y th·ª±c h√†nh v·ªõi
                  c√°c design patterns, interfaces v√† abstract classes ƒë·ªÉ n√¢ng cao k·ªπ nƒÉng OOP!
                </p>
              </div>
            </div>
          </section>

          <div className="blog-navigation">
            <Link to="/blog/java1" className="nav-button back-button">
              <span className="nav-icon">‚Üê</span>
              <span>Java Basics</span>
            </Link>
            <Link to="/blog/java3" className="nav-button next-button">
              <span>Java Collections</span>
              <span className="nav-icon">‚Üí</span>
            </Link>
          </div>
        </article>
      </div>
    </div>
  );
}

export default Java2;
