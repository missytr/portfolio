{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Administrator\\\\Documents\\\\my-portfolio-main\\\\src\\\\components\\\\ThreePerson.js\",\n  _s = $RefreshSig$();\n// ...existing code...\nimport React, { useRef, useEffect } from \"react\";\nimport * as THREE from \"three\";\nimport { OrbitControls } from \"three/examples/jsm/controls/OrbitControls\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ThreePerson() {\n  _s();\n  const mountRef = useRef(null);\n  useEffect(() => {\n    const mount = mountRef.current;\n    if (!mount) return;\n    const width = mount.clientWidth || 320;\n    const height = mount.clientHeight || 320;\n    const scene = new THREE.Scene();\n    scene.background = new THREE.Color(0x000000);\n    const camera = new THREE.PerspectiveCamera(45, width / height, 0.1, 1000);\n    camera.position.set(0, 1.4, 3);\n    const renderer = new THREE.WebGLRenderer({\n      antialias: true,\n      alpha: true\n    });\n    renderer.setSize(width, height);\n    renderer.setPixelRatio(Math.min(window.devicePixelRatio, 2));\n    mount.appendChild(renderer.domElement);\n\n    // Lights\n    const hemi = new THREE.HemisphereLight(0xffffff, 0x444444, 0.9);\n    hemi.position.set(0, 2, 0);\n    scene.add(hemi);\n    const dir = new THREE.DirectionalLight(0xffffff, 0.8);\n    dir.position.set(3, 10, 5);\n    scene.add(dir);\n\n    // Person group\n    const person = new THREE.Group();\n    scene.add(person);\n\n    // Materials\n    const bodyMat = new THREE.MeshStandardMaterial({\n      color: 0x7c3aed,\n      metalness: 0.1,\n      roughness: 0.7\n    });\n    const skinMat = new THREE.MeshStandardMaterial({\n      color: 0xffd7b5,\n      metalness: 0.05,\n      roughness: 0.8\n    });\n    const pantMat = new THREE.MeshStandardMaterial({\n      color: 0x0ea5a4,\n      metalness: 0.05,\n      roughness: 0.8\n    });\n\n    // Torso\n    const torso = new THREE.Mesh(new THREE.BoxGeometry(0.6, 0.9, 0.35), bodyMat);\n    torso.position.y = 0.9;\n    person.add(torso);\n\n    // Head\n    const head = new THREE.Mesh(new THREE.SphereGeometry(0.22, 24, 24), skinMat);\n    head.position.y = 1.45;\n    person.add(head);\n\n    // Left arm (static)\n    const leftArm = new THREE.Mesh(new THREE.BoxGeometry(0.18, 0.7, 0.16), skinMat);\n    leftArm.position.set(-0.44, 1.05, 0);\n    leftArm.rotation.z = 0.15;\n    person.add(leftArm);\n\n    // Right arm with pivot (waving)\n    const rightArmPivot = new THREE.Object3D();\n    rightArmPivot.position.set(0.44, 1.4, 0);\n    person.add(rightArmPivot);\n    const rightArm = new THREE.Mesh(new THREE.BoxGeometry(0.17, 0.7, 0.15), skinMat);\n    rightArm.position.set(0, -0.35, 0);\n    rightArmPivot.add(rightArm);\n\n    // Legs\n    const leftLeg = new THREE.Mesh(new THREE.BoxGeometry(0.2, 0.8, 0.2), pantMat);\n    leftLeg.position.set(-0.15, 0.25, 0);\n    person.add(leftLeg);\n    const rightLeg = new THREE.Mesh(new THREE.BoxGeometry(0.2, 0.8, 0.2), pantMat);\n    rightLeg.position.set(0.15, 0.25, 0);\n    person.add(rightLeg);\n\n    // Eyes\n    const eyeMat = new THREE.MeshStandardMaterial({\n      color: 0x000000\n    });\n    const leftEye = new THREE.Mesh(new THREE.SphereGeometry(0.02, 8, 8), eyeMat);\n    leftEye.position.set(-0.06, 1.5, 0.18);\n    person.add(leftEye);\n    const rightEye = leftEye.clone();\n    rightEye.position.x = 0.06;\n    person.add(rightEye);\n    person.scale.set(1.1, 1.1, 1.1);\n    person.position.y = -0.05;\n\n    // Controls\n    const controls = new OrbitControls(camera, renderer.domElement);\n    controls.enableDamping = true;\n    controls.enablePan = false;\n    controls.minDistance = 1.5;\n    controls.maxDistance = 6;\n    controls.target.set(0, 1.0, 0);\n\n    // Animation\n    let reqId;\n    const clock = new THREE.Clock();\n    function animate() {\n      const t = clock.getElapsedTime();\n      rightArmPivot.rotation.z = Math.sin(t * 3) * 0.9 * (Math.abs(Math.sin(t * 1.2)) > 0.2 ? 1 : 0.2);\n      person.position.y = Math.sin(t * 1.2) * 0.02;\n      person.rotation.y = Math.sin(t * 0.4) * 0.06;\n      controls.update();\n      renderer.render(scene, camera);\n      reqId = requestAnimationFrame(animate);\n    }\n    animate();\n    function handleResize() {\n      const w = mount.clientWidth;\n      const h = mount.clientHeight;\n      camera.aspect = w / h;\n      camera.updateProjectionMatrix();\n      renderer.setSize(w, h);\n    }\n    window.addEventListener(\"resize\", handleResize);\n\n    // Cleanup\n    return () => {\n      cancelAnimationFrame(reqId);\n      window.removeEventListener(\"resize\", handleResize);\n      controls.dispose();\n      renderer.dispose();\n      if (mount && renderer.domElement) mount.removeChild(renderer.domElement);\n      [torso, head, leftArm, rightArm, leftLeg, rightLeg, leftEye, rightEye].forEach(m => {\n        if (m.geometry) m.geometry.dispose();\n        if (m.material) {\n          if (Array.isArray(m.material)) m.material.forEach(mat => mat.dispose());else m.material.dispose();\n        }\n      });\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: mountRef,\n    style: {\n      width: \"320px\",\n      height: \"320px\"\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 140,\n    columnNumber: 10\n  }, this);\n}\n// ...existing code...\n_s(ThreePerson, \"V9/qkEdV8GfsDZk7lMTA1T8g5Ps=\");\n_c = ThreePerson;\nvar _c;\n$RefreshReg$(_c, \"ThreePerson\");","map":{"version":3,"names":["React","useRef","useEffect","THREE","OrbitControls","jsxDEV","_jsxDEV","ThreePerson","_s","mountRef","mount","current","width","clientWidth","height","clientHeight","scene","Scene","background","Color","camera","PerspectiveCamera","position","set","renderer","WebGLRenderer","antialias","alpha","setSize","setPixelRatio","Math","min","window","devicePixelRatio","appendChild","domElement","hemi","HemisphereLight","add","dir","DirectionalLight","person","Group","bodyMat","MeshStandardMaterial","color","metalness","roughness","skinMat","pantMat","torso","Mesh","BoxGeometry","y","head","SphereGeometry","leftArm","rotation","z","rightArmPivot","Object3D","rightArm","leftLeg","rightLeg","eyeMat","leftEye","rightEye","clone","x","scale","controls","enableDamping","enablePan","minDistance","maxDistance","target","reqId","clock","Clock","animate","t","getElapsedTime","sin","abs","update","render","requestAnimationFrame","handleResize","w","h","aspect","updateProjectionMatrix","addEventListener","cancelAnimationFrame","removeEventListener","dispose","removeChild","forEach","m","geometry","material","Array","isArray","mat","ref","style","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Administrator/Documents/my-portfolio-main/src/components/ThreePerson.js"],"sourcesContent":["// ...existing code...\r\nimport React, { useRef, useEffect } from \"react\";\r\nimport * as THREE from \"three\";\r\nimport { OrbitControls } from \"three/examples/jsm/controls/OrbitControls\";\r\n\r\nexport default function ThreePerson() {\r\n  const mountRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    const mount = mountRef.current;\r\n    if (!mount) return;\r\n\r\n    const width = mount.clientWidth || 320;\r\n    const height = mount.clientHeight || 320;\r\n\r\n    const scene = new THREE.Scene();\r\n    scene.background = new THREE.Color(0x000000);\r\n    const camera = new THREE.PerspectiveCamera(45, width / height, 0.1, 1000);\r\n    camera.position.set(0, 1.4, 3);\r\n\r\n    const renderer = new THREE.WebGLRenderer({ antialias: true, alpha: true });\r\n    renderer.setSize(width, height);\r\n    renderer.setPixelRatio(Math.min(window.devicePixelRatio, 2));\r\n    mount.appendChild(renderer.domElement);\r\n\r\n    // Lights\r\n    const hemi = new THREE.HemisphereLight(0xffffff, 0x444444, 0.9);\r\n    hemi.position.set(0, 2, 0);\r\n    scene.add(hemi);\r\n\r\n    const dir = new THREE.DirectionalLight(0xffffff, 0.8);\r\n    dir.position.set(3, 10, 5);\r\n    scene.add(dir);\r\n\r\n    // Person group\r\n    const person = new THREE.Group();\r\n    scene.add(person);\r\n\r\n    // Materials\r\n    const bodyMat = new THREE.MeshStandardMaterial({ color: 0x7c3aed, metalness: 0.1, roughness: 0.7 });\r\n    const skinMat = new THREE.MeshStandardMaterial({ color: 0xffd7b5, metalness: 0.05, roughness: 0.8 });\r\n    const pantMat = new THREE.MeshStandardMaterial({ color: 0x0ea5a4, metalness: 0.05, roughness: 0.8 });\r\n\r\n    // Torso\r\n    const torso = new THREE.Mesh(new THREE.BoxGeometry(0.6, 0.9, 0.35), bodyMat);\r\n    torso.position.y = 0.9;\r\n    person.add(torso);\r\n\r\n    // Head\r\n    const head = new THREE.Mesh(new THREE.SphereGeometry(0.22, 24, 24), skinMat);\r\n    head.position.y = 1.45;\r\n    person.add(head);\r\n\r\n    // Left arm (static)\r\n    const leftArm = new THREE.Mesh(new THREE.BoxGeometry(0.18, 0.7, 0.16), skinMat);\r\n    leftArm.position.set(-0.44, 1.05, 0);\r\n    leftArm.rotation.z = 0.15;\r\n    person.add(leftArm);\r\n\r\n    // Right arm with pivot (waving)\r\n    const rightArmPivot = new THREE.Object3D();\r\n    rightArmPivot.position.set(0.44, 1.4, 0);\r\n    person.add(rightArmPivot);\r\n\r\n    const rightArm = new THREE.Mesh(new THREE.BoxGeometry(0.17, 0.7, 0.15), skinMat);\r\n    rightArm.position.set(0, -0.35, 0);\r\n    rightArmPivot.add(rightArm);\r\n\r\n    // Legs\r\n    const leftLeg = new THREE.Mesh(new THREE.BoxGeometry(0.2, 0.8, 0.2), pantMat);\r\n    leftLeg.position.set(-0.15, 0.25, 0);\r\n    person.add(leftLeg);\r\n\r\n    const rightLeg = new THREE.Mesh(new THREE.BoxGeometry(0.2, 0.8, 0.2), pantMat);\r\n    rightLeg.position.set(0.15, 0.25, 0);\r\n    person.add(rightLeg);\r\n\r\n    // Eyes\r\n    const eyeMat = new THREE.MeshStandardMaterial({ color: 0x000000 });\r\n    const leftEye = new THREE.Mesh(new THREE.SphereGeometry(0.02, 8, 8), eyeMat);\r\n    leftEye.position.set(-0.06, 1.5, 0.18);\r\n    person.add(leftEye);\r\n    const rightEye = leftEye.clone();\r\n    rightEye.position.x = 0.06;\r\n    person.add(rightEye);\r\n\r\n    person.scale.set(1.1, 1.1, 1.1);\r\n    person.position.y = -0.05;\r\n\r\n    // Controls\r\n    const controls = new OrbitControls(camera, renderer.domElement);\r\n    controls.enableDamping = true;\r\n    controls.enablePan = false;\r\n    controls.minDistance = 1.5;\r\n    controls.maxDistance = 6;\r\n    controls.target.set(0, 1.0, 0);\r\n\r\n    // Animation\r\n    let reqId;\r\n    const clock = new THREE.Clock();\r\n\r\n    function animate() {\r\n      const t = clock.getElapsedTime();\r\n      rightArmPivot.rotation.z = Math.sin(t * 3) * 0.9 * (Math.abs(Math.sin(t * 1.2)) > 0.2 ? 1 : 0.2);\r\n      person.position.y = Math.sin(t * 1.2) * 0.02;\r\n      person.rotation.y = Math.sin(t * 0.4) * 0.06;\r\n\r\n      controls.update();\r\n      renderer.render(scene, camera);\r\n      reqId = requestAnimationFrame(animate);\r\n    }\r\n    animate();\r\n\r\n    function handleResize() {\r\n      const w = mount.clientWidth;\r\n      const h = mount.clientHeight;\r\n      camera.aspect = w / h;\r\n      camera.updateProjectionMatrix();\r\n      renderer.setSize(w, h);\r\n    }\r\n    window.addEventListener(\"resize\", handleResize);\r\n\r\n    // Cleanup\r\n    return () => {\r\n      cancelAnimationFrame(reqId);\r\n      window.removeEventListener(\"resize\", handleResize);\r\n      controls.dispose();\r\n      renderer.dispose();\r\n      if (mount && renderer.domElement) mount.removeChild(renderer.domElement);\r\n      [torso, head, leftArm, rightArm, leftLeg, rightLeg, leftEye, rightEye].forEach((m) => {\r\n        if (m.geometry) m.geometry.dispose();\r\n        if (m.material) {\r\n          if (Array.isArray(m.material)) m.material.forEach((mat) => mat.dispose());\r\n          else m.material.dispose();\r\n        }\r\n      });\r\n    };\r\n  }, []);\r\n\r\n  return <div ref={mountRef} style={{ width: \"320px\", height: \"320px\" }} />;\r\n}\r\n// ...existing code..."],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}